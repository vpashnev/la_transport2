CREATE PROCEDURE la.update_shipment_data (
  INOUT n1 BIGINT,
  store_n1 INT,
  cmdty1 VARCHAR(4),
  ship_date1 DATE,
  del_date1 DATE,
  ship_day1 INT,
  del_day1 INT,
  del_week1 INT,
  route_n1 VARCHAR(6),
  stop_n1 VARCHAR(3),
  dc1 CHAR(2),
  dc_depart_time1 TIME,
  prev_distance1 INT,
  prev_travel_time1 TIME,
  arrival_time1 TIME,
  service_time1 TIME,
  total_service_time1 TIME,
  total_travel_time1 TIME,
  equip_size1 VARCHAR(15),
  add_key1 VARCHAR(4),
  order_n1 VARCHAR(20),
  order_type1 VARCHAR(2),
  lw1 CHAR(2),
  pallets1 FLOAT,
  units1 FLOAT,
  weight1 FLOAT,
  cube1 FLOAT,
  user_file1 VARCHAR(50))
BEGIN 
  DECLARE n2 BIGINT;
  DECLARE ship_day2 INT;
  DECLARE del_date2 DATE;
  DECLARE del_days INT;
  DECLARE route_n2 VARCHAR(6);
  DECLARE stop_n2 VARCHAR(3);
  DECLARE dc2 CHAR(2);
  DECLARE dc_depart_time2 TIME;
  DECLARE prev_distance2 INT;
  DECLARE prev_travel_time2 TIME;
  DECLARE arrival_time2 TIME;
  DECLARE service_time2 TIME;
  DECLARE total_service_time2 TIME;
  DECLARE total_travel_time2 TIME;
  DECLARE equip_size2 VARCHAR(15);
  DECLARE holiday_flag1 CHAR(1);
  DECLARE holiday_flag2 CHAR(1);
  DECLARE order_n2 VARCHAR(20);
  DECLARE order_type2 VARCHAR(2);
  DECLARE lw2 CHAR(2);
  DECLARE pallets2 FLOAT;
  DECLARE units2 FLOAT;
  DECLARE weight2 FLOAT;
  DECLARE cube2 FLOAT;
  DECLARE err2 VARCHAR(100);
  DECLARE CONTINUE HANDLER FOR NOT FOUND SET n2=0;

  IF del_date1 IS NULL THEN
    SET del_days = del_day1 - ship_day1;
    IF del_days < 0 THEN
      SET del_days = 7 + del_days;
    END IF;
    SET del_days = del_days + del_week1*7;
    SET del_date1 = ship_date1 + (del_days DAYS);
    SET holiday_flag1 = NULL;
  ELSE
    SET holiday_flag1 = '1';
  END IF;

  IF n1 = 0 THEN
    SET n2 = 1;
    SELECT n,route_n,stop_n,dc,dc_depart_time,prev_distance,prev_travel_time,
      arrival_time,service_time,total_service_time,total_travel_time,equip_size,
      holiday_flag
      INTO n1,route_n2,stop_n2,dc2,dc_depart_time2,prev_distance2,prev_travel_time2,
      arrival_time2,service_time2,total_service_time2,total_travel_time2,equip_size2,
      holiday_flag2
      FROM la.hship_data WHERE store_n=store_n1 AND cmdty=cmdty1 AND ship_date=ship_date1 AND
      del_date=del_date1 AND add_key=add_key1;
    IF n2 = 0 THEN
      SELECT n INTO n1 FROM NEW TABLE (
        INSERT INTO la.hship_data (store_n,cmdty,ship_date,del_date,route_n,stop_n,dc,
          dc_depart_time,prev_distance,prev_travel_time,arrival_time,service_time,
          total_service_time,total_travel_time,equip_size,add_key,holiday_flag,
          first_user_file,next_user_file)
        VALUES (store_n1,cmdty1,ship_date1,del_date1,route_n1,stop_n1,dc1,
          dc_depart_time1,prev_distance1,prev_travel_time1,arrival_time1,service_time1,
          total_service_time1,total_travel_time1,equip_size1,add_key1,holiday_flag1,
          user_file1,user_file1)
      );
    ELSEIF route_n1<>route_n2 OR stop_n1<>stop_n2 OR dc1<>dc2 OR
      dc_depart_time1<>dc_depart_time2 OR prev_distance1<>prev_distance2 OR
      prev_travel_time1<>prev_travel_time2 OR arrival_time1<>arrival_time2 OR
      service_time1<>service_time2 OR total_service_time1<>total_service_time2 OR
      total_travel_time1<>total_travel_time2 OR equip_size1<>equip_size2 OR
      holiday_flag1 IS NULL AND holiday_flag2 IS NOT NULL OR
      holiday_flag1<>holiday_flag2 THEN 
      UPDATE la.hship_data SET route_n=route_n1,stop_n=stop_n1,dc=dc1,
        dc_depart_time=dc_depart_time1,prev_distance=prev_distance1,prev_travel_time=prev_travel_time1,
        arrival_time=arrival_time1,service_time=service_time1,total_service_time=total_service_time1,
        total_travel_time=total_travel_time1,equip_size=equip_size1,holiday_flag=holiday_flag1,
        next_user_file=user_file1,update_time=CURRENT_TIMESTAMP,unsent_note='1' WHERE n=n1;
    END IF;
  END IF;

  SELECT n,order_type,lw,pallets,units,weight,cube
    INTO n2,order_type2,lw2,pallets2,units2,weight2,cube2
    FROM la.hrn_order WHERE ship_n=n1 AND order_n=order_n1;
  IF n2 = 0 THEN
    INSERT INTO la.hrn_order (ship_n,order_n,order_type,lw,
      pallets,units,weight,cube,first_user_file,next_user_file)
    VALUES (n1,order_n1,order_type1,lw1,pallets1,
      units1,weight1,cube1,user_file1,user_file1);
  ELSEIF order_type1<>order_type2 OR lw1<>lw2 OR pallets1<>pallets2 OR units1<>units2 OR
    weight1<>weight2 OR cube1<>cube2 THEN 
    UPDATE la.hrn_order SET order_type=order_type1,lw=lw1,pallets=pallets1,units=units1,
      weight=weight1,cube=cube1,next_user_file=user_file1,update_time=CURRENT_TIMESTAMP
      WHERE n=n2;
  END IF;

END
@
